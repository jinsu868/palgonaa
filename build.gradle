plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.palgona'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation("org.springframework.security:spring-security-messaging")

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    //s3
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-java-sdk-s3'

    runtimeOnly 'com.h2database:h2'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("jar") {
    enabled = false
}

tasks.register('copyYml', Copy) {
    from "./palgona-yml-manager/yml/main"
    include "*.yml"
    into "./src/main/resources"
}

tasks.register('copyJson', Copy) {
    from "./palgona-yml-manager/yml/main"
    include "*.json"
    into "./src/main/resources"
}

tasks.register('copyTestJson', Copy) {
    from "./palgona-yml-manager/yml/test"
    include "*.json"
    into "./src/test/resources"
}

tasks.register('copyTestYml', Copy) {
    from "./palgona-yml-manager/yml/test"
    include "*.yml"
    into "./src/test/resources"
}

tasks.register('copySql', Copy) {
    from "./palgona-yml-manager/sql"
    include "*.sql"
    into "./src/main/resources"
}

tasks.named('processResources') {
    dependsOn 'copySql'
}

processResources.dependsOn('copyJson', 'copyYml')
processTestResources.dependsOn('copyTestJson', 'copyTestYml')